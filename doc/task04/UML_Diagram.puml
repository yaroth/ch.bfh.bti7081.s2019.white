@startuml

skinparam nodesep 100
/'skinparam ranksep 200'/

left header
Testheader Yann
endheader

title Klassendiagramm

/' Define the dependencies'/
Entry <|-- ToDo
Entry <|-- Tip
Entry <|-- MoodEntry

User <|-- PatientUser
User <|-- TherapistUser


/' Define the class details'/
class User {
userData
login()
change()
}

class PatientUser{
addTherapist(self)
addTip(self)
addEntry(self)
addMood(self)
checkCalendar(self)
checkTipList(self)
}

class TherapistUser{
List: Patient
addTip(Patient)
addCalendarEntry(s/patient)
checkCalendar(s/patient)
addTip(Tip)
}

class AuthController {
List: User
List: PW
addUser(userPW)
removeUser(User)
authCheck(userPW): bool
}

class Calendar {
List: Entry
update()
toList(Entry)
}

class TipListÂ {
List: Tip
addTip(Tip)
showList(Tip)
}

class EntryÂ {
DateTime: StartTime
Time: Duration
Type: Enum
addToCalendar()
}

class ToDo {
SubType: Enum
Description: String
}

class Tip {
SubType: Enum
FilterValues: List
Description: String
}

class MoodEntry{
Good: boolean
GoodLevel: int
Severity: int
Description: String
}

/' Define entity relations (?)'/
User "1..*" -> "1" AuthController

PatientUser "1..*" -> "1" TherapistUser
PatientUser "1" --> "1..*" Entry
PatientUser "1" -> "1" Calendar
PatientUser "1" --> "1" TipList

TherapistUser "1..*" --> "1..*" Entry
TherapistUser "1..*" -> "1..*" Calendar
TherapistUser "1" --> "1" TipList

Entry "1..*" -> "1" Calendar

@enduml